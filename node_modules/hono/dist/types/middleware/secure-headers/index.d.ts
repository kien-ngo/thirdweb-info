import type { MiddlewareHandler } from '../../types';
interface ContentSecurityPolicyOptions {
    defaultSrc?: string[];
    baseUri?: string[];
    fontSrc?: string[];
    frameAncestors?: string[];
    imgSrc?: string[];
    objectSrc?: string[];
    scriptSrc?: string[];
    scriptSrcAttr?: string[];
    styleSrc?: string[];
    upgradeInsecureRequests?: string[];
}
interface SecureHeadersOptions {
    contentSecurityPolicy?: ContentSecurityPolicyOptions;
    crossOriginEmbedderPolicy?: boolean;
    crossOriginResourcePolicy?: boolean;
    crossOriginOpenerPolicy?: boolean;
    originAgentCluster: boolean;
    referrerPolicy?: boolean;
    strictTransportSecurity?: boolean;
    xContentTypeOptions?: boolean;
    xDnsPrefetchControl?: boolean;
    xDownloadOptions?: boolean;
    xFrameOptions?: boolean;
    xPermittedCrossDomainPolicies?: boolean;
    xXssProtection?: boolean;
}
export declare const secureHeaders: (customOptions?: Partial<SecureHeadersOptions>) => MiddlewareHandler;
export {};
